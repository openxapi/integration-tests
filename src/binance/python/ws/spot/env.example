# Binance Spot WebSocket API - Python Integration Tests
# Environment Configuration Template
#
# Copy this file to env.local and set your actual values
# Then run: source env.local

# =============================================================================
# BINANCE API CREDENTIALS
# =============================================================================

# HMAC Authentication (most common)
# Get these from: https://testnet.binance.vision/ (for testnet)
# or https://www.binance.com/en/my/settings/api-management (for mainnet)
BINANCE_API_KEY=""
BINANCE_SECRET_KEY=""

# RSA Authentication (alternative method)
# Requires RSA key pair generation and registration with Binance
BINANCE_RSA_API_KEY=""
BINANCE_RSA_PRIVATE_KEY_PATH=""

# Ed25519 Authentication (required for session management)
# Requires Ed25519 key pair generation and registration with Binance
BINANCE_ED25519_API_KEY=""
BINANCE_ED25519_PRIVATE_KEY_PATH=""

# =============================================================================
# TEST CONFIGURATION
# =============================================================================

# Use testnet for safe testing (recommended)
BINANCE_TESTNET=true

# Test symbol for trading operations
TEST_SYMBOL="BTCUSDT"

# Small quantity for test orders (adjust based on symbol requirements)
TEST_QUANTITY="0.001"

# Rate limiting delay between requests (seconds)
RATE_LIMIT_DELAY="2.0"

# =============================================================================
# SDK CONFIGURATION
# =============================================================================

# WebSocket connection timeout (seconds)
WS_CONNECT_TIMEOUT="10"

# WebSocket ping interval (seconds)
WS_PING_INTERVAL="20"

# WebSocket ping timeout (seconds)
WS_PING_TIMEOUT="10"

# Auto-reconnect on connection loss
WS_AUTO_RECONNECT="true"

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Python logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOGGING_LEVEL="INFO"

# Enable verbose test output
VERBOSE_TESTS="true"

# =============================================================================
# ADVANCED SETTINGS
# =============================================================================

# Custom WebSocket server URLs (leave empty for defaults)
# Testnet WebSocket URL
TESTNET_WS_URL=""

# Mainnet WebSocket URL (use with caution)
MAINNET_WS_URL=""

# Maximum number of concurrent connections for testing
MAX_CONCURRENT_CONNECTIONS="5"

# Test timeout for individual test functions (seconds)
TEST_TIMEOUT="30"

# =============================================================================
# USAGE EXAMPLES
# =============================================================================

# Basic setup for public endpoints only:
# BINANCE_TESTNET=true
# (No API keys needed for public endpoints)

# Setup for authenticated endpoints (HMAC):
# BINANCE_API_KEY="your_testnet_api_key"
# BINANCE_SECRET_KEY="your_testnet_secret_key"
# BINANCE_TESTNET=true

# Setup for session management (Ed25519 required):
# BINANCE_ED25519_API_KEY="your_ed25519_api_key"
# BINANCE_ED25519_PRIVATE_KEY_PATH="/path/to/ed25519_private_key.pem"
# BINANCE_TESTNET=true

# Setup for comprehensive testing (all auth methods):
# BINANCE_API_KEY="your_hmac_api_key"
# BINANCE_SECRET_KEY="your_hmac_secret_key"
# BINANCE_RSA_API_KEY="your_rsa_api_key"
# BINANCE_RSA_PRIVATE_KEY_PATH="/path/to/rsa_private_key.pem"
# BINANCE_ED25519_API_KEY="your_ed25519_api_key"
# BINANCE_ED25519_PRIVATE_KEY_PATH="/path/to/ed25519_private_key.pem"
# BINANCE_TESTNET=true

# =============================================================================
# SECURITY NOTES
# =============================================================================

# - Never commit this file with real credentials to version control
# - Use testnet credentials whenever possible
# - Store private key files securely with proper permissions (600)
# - Rotate API keys regularly
# - Use IP restrictions on your API keys when possible
# - Monitor your API key usage and rate limits

# =============================================================================
# TESTNET SETUP INSTRUCTIONS
# =============================================================================

# 1. Go to https://testnet.binance.vision/
# 2. Login with your GitHub account
# 3. Create API Key/Secret pair
# 4. For Ed25519/RSA keys, generate key pairs and register public keys
# 5. Set the credentials in this file
# 6. Copy to env.local and source it before running tests

# Example key generation for Ed25519:
# openssl genpkey -algorithm ed25519 -out ed25519_private_key.pem
# openssl pkey -in ed25519_private_key.pem -pubout -out ed25519_public_key.pem

# Example key generation for RSA:
# openssl genrsa -out rsa_private_key.pem 2048
# openssl rsa -in rsa_private_key.pem -pubout -out rsa_public_key.pem